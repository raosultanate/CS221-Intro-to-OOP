<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="daniels-mbp.boisestate.edu" failures="24" tests="894" name="IUArrayList" time="1.803" errors="0" timestamp="2019-11-01T20:10:07 MDT">
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_2_addToFrontA_A.initialize(Test_2_addToFrontA_A.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605223E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605226E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605228E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.57266060523E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605232E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605235E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605237E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605239E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605243E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605246E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605249E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605251E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605253E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605256E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605258E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605261E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605264E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605269E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605272E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605274E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605276E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605278E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605281E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605283E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605285E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605288E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.57266060529E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605293E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605295E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605297E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605299E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605301E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605303E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605306E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_2_addToFrontA_A" name="@BeforeMethod initialize" time="-1.572660605307E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_3_addToRearA_A.initialize(Test_3_addToRearA_A.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605314E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605316E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605319E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605321E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605323E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605324E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605326E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605328E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.57266060533E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605332E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605334E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605336E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605338E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605341E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605343E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605345E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605347E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.57266060535E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605351E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605353E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605355E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605357E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605359E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605361E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605363E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605365E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605367E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.57266060537E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605372E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605374E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605376E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605378E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.57266060538E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605383E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_3_addToRearA_A" name="@BeforeMethod initialize" time="-1.572660605385E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_4_addA_A.initialize(Test_4_addA_A.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605392E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605394E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605396E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605398E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.5726606054E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605403E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605405E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605406E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605408E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.57266060541E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605413E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605415E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605417E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605419E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605421E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605423E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605425E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605427E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605429E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605431E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605433E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605436E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605438E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605441E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605442E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605444E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605445E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605447E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605448E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.57266060545E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605452E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605454E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605455E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605457E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_4_addA_A" name="@BeforeMethod initialize" time="-1.572660605458E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_5_add0A_A.initialize(Test_5_add0A_A.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605463E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605465E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605467E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605468E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605469E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.57266060547E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605472E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605474E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605475E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605476E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605477E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605479E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.57266060548E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605482E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605483E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605485E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605486E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605487E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605488E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.57266060549E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605491E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605493E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605494E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605495E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605497E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605498E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.5726606055E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605502E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605503E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605505E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605506E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605508E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605509E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605511E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_5_add0A_A" name="@BeforeMethod initialize" time="-1.572660605512E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_6_A_addToFrontB_BA.initialize(Test_6_A_addToFrontB_BA.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605517E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605519E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.57266060552E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605522E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605523E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605525E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605527E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605532E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605534E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605535E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605536E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605538E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605539E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.57266060554E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605542E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605543E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605544E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605546E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605547E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605548E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605549E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.57266060555E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605551E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605552E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605553E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605554E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605554E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605556E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605557E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605558E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605559E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605561E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605562E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605563E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605564E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605565E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605567E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605568E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605569E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.57266060557E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605572E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605573E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605574E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="@BeforeMethod initialize" time="-1.572660605575E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_7_A_addToRearB_AB.initialize(Test_7_A_addToRearB_AB.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605579E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.57266060558E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605581E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605582E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605583E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605584E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605585E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605587E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605588E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605589E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605591E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605592E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605593E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605594E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605595E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605597E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605598E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605599E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.5726606056E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605601E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605602E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605603E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605604E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605605E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605606E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605607E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605608E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.57266060561E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605611E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605612E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605613E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605614E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605615E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605616E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605616E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605618E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605619E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.57266060562E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605621E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605622E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605623E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605624E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605625E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="@BeforeMethod initialize" time="-1.572660605626E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_8_A_addAfterBA_AB.initialize(Test_8_A_addAfterBA_AB.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605629E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.57266060563E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605631E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605631E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605632E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605633E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605634E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605636E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605637E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605638E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605639E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.57266060564E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605641E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605642E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605643E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605644E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605645E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605646E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605647E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605648E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605648E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605649E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.57266060565E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605651E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605652E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605653E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605654E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605655E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605655E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605656E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605657E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605658E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605659E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.57266060566E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605661E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605662E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605663E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605664E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605665E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605666E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605667E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605668E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.572660605669E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="@BeforeMethod initialize" time="-1.57266060567E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_9_A_addB_AB.initialize(Test_9_A_addB_AB.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605673E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605674E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605674E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605675E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605676E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605677E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605678E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605679E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.57266060568E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.57266060568E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605681E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605681E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605682E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605683E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605735E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605736E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605737E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605737E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605738E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605739E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.57266060574E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605741E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605741E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605742E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605743E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605744E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605745E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605746E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605746E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605747E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605748E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605749E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605749E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605751E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605751E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605752E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605753E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605754E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605755E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605756E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605756E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605757E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605757E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_9_A_addB_AB" name="@BeforeMethod initialize" time="-1.572660605758E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_11_A_add1B_AB.initialize(Test_11_A_add1B_AB.java:56)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605761E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605761E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605762E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605763E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605763E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605764E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605765E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605766E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605766E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605767E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605768E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605769E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605769E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.57266060577E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605771E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605772E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605773E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605834E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605835E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605836E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605837E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605838E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605838E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605839E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.57266060584E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605841E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605841E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605842E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605843E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605844E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605845E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605846E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605847E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605848E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605848E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605849E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.57266060585E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605851E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605852E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605853E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605853E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605854E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605855E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_11_A_add1B_AB" name="@BeforeMethod initialize" time="-1.572660605856E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_12_A_removeFirst_emptyList.initialize(Test_12_A_removeFirst_emptyList.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605858E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605859E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605859E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.57266060586E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605861E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605862E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605863E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605863E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605864E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605865E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605866E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605867E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605868E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605868E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.57266060587E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605871E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605872E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605873E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605874E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605931E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605932E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605933E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="@BeforeMethod initialize" time="-1.572660605933E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_13_A_removeLast_emptyList.initialize(Test_13_A_removeLast_emptyList.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605936E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605937E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605938E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605938E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605939E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.57266060594E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605941E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605942E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605942E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605943E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605944E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605945E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605945E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605946E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605947E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605948E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605948E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605949E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.57266060595E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605951E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605952E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605953E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="@BeforeMethod initialize" time="-1.572660605954E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_14_A_removeA_emptyList.initialize(Test_14_A_removeA_emptyList.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605957E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605958E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605959E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.57266060596E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605961E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605961E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605962E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605963E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605964E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605965E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605966E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605966E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605967E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605968E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605968E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605969E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.57266060597E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.57266060597E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660605976E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660606035E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660606036E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660606036E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="@BeforeMethod initialize" time="-1.572660606037E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_15_A_remove0_emptyList.initialize(Test_15_A_remove0_emptyList.java:51)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606039E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606039E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.57266060604E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.57266060604E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606041E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606041E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606042E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606042E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606042E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606043E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606043E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606044E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606044E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606044E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606045E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606045E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606045E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606046E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606046E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606047E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606047E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606048E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="@BeforeMethod initialize" time="-1.572660606048E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_16_A_set0B_B.initialize(Test_16_A_set0B_B.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.57266060605E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606051E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606052E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606052E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606053E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606053E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606053E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606054E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606054E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606055E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606055E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606056E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606056E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606057E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606057E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606058E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606058E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606059E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606059E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606125E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606125E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606126E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606127E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606127E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606128E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606128E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606129E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606129E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606129E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.57266060613E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606131E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606131E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606131E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606132E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_16_A_set0B_B" name="@BeforeMethod initialize" time="-1.572660606132E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_17_AB_addToFrontC_CAB.initialize(Test_17_AB_addToFrontC_CAB.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606134E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606134E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606135E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606135E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606135E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606136E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606136E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606137E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606137E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606138E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606138E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606138E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606139E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606139E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.57266060614E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.57266060614E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.57266060614E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606141E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606141E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606142E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606142E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606143E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606144E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606144E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606145E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606145E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606145E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606146E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606146E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606147E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606147E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606148E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606148E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606211E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606212E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606212E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606213E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606213E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606213E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606214E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606214E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606215E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606215E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606216E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606216E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606217E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606217E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606218E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606218E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606218E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606219E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.572660606219E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="@BeforeMethod initialize" time="-1.57266060622E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_22_AB_add0C_CAB.initialize(Test_22_AB_add0C_CAB.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606221E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606222E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606222E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606222E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606223E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606223E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606223E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606224E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606224E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606225E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606225E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606225E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606226E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606226E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606227E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606227E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606227E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606228E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606228E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606229E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606229E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606229E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.57266060623E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.57266060623E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606231E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606231E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606231E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606232E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606232E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.5726606063E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606301E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606301E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606301E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606302E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606302E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606302E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606303E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606303E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606304E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606304E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606305E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606305E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606306E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606306E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606307E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606307E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606308E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606308E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606309E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.572660606309E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.57266060631E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.57266060631E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="@BeforeMethod initialize" time="-1.57266060631E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_25_AB_removeFirst_B.initialize(Test_25_AB_removeFirst_B.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606312E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606312E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606313E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606313E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606314E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606314E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606315E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606315E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606316E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606316E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606316E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606317E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606318E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606319E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606319E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.57266060632E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606321E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606322E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.57266060639E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606391E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606391E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606392E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606392E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606393E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606393E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606393E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606394E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606394E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606395E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606395E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606396E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606397E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606397E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606398E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="@BeforeMethod initialize" time="-1.572660606398E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_26_AB_removeLast_A.initialize(Test_26_AB_removeLast_A.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.5726606064E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.5726606064E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606401E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606401E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606402E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606402E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606402E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606403E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606403E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606404E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606404E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606405E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606406E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606407E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606407E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606408E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606409E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606409E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.57266060641E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.57266060641E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606411E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606412E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606413E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606414E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606414E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606477E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606478E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606479E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606479E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606479E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.57266060648E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.57266060648E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606481E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606481E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_26_AB_removeLast_A" name="@BeforeMethod initialize" time="-1.572660606481E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_27_AB_removeA_B.initialize(Test_27_AB_removeA_B.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606483E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606483E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606484E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606484E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606485E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606485E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606485E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606486E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606486E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606487E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606487E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606488E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606489E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606489E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.57266060649E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606491E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606491E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606492E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606492E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606493E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606493E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606494E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606494E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606495E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606495E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606496E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606496E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606497E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606497E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606498E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606499E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606499E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606571E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606572E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_27_AB_removeA_B" name="@BeforeMethod initialize" time="-1.572660606573E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_28_AB_removeB_A.initialize(Test_28_AB_removeB_A.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606574E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606575E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606575E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606575E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606576E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606576E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606577E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606577E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606577E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606578E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606578E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606579E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606579E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.57266060658E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.57266060658E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606581E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606581E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606581E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606582E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606582E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606583E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606583E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606583E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606584E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606584E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606585E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606585E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606586E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606586E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606587E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606587E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606588E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606588E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.572660606589E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_28_AB_removeB_A" name="@BeforeMethod initialize" time="-1.57266060659E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_29_AB_remove0_B.initialize(Test_29_AB_remove0_B.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606591E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606592E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606593E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606662E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606663E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606663E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606664E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606665E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606665E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606666E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606667E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606668E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606668E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606669E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.57266060667E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.57266060667E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606671E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606671E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606672E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606672E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606673E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606673E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606674E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606675E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606675E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606676E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606676E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606677E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606678E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606678E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606679E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.57266060668E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.57266060668E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606681E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_29_AB_remove0_B" name="@BeforeMethod initialize" time="-1.572660606682E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_30_AB_remove1_A.initialize(Test_30_AB_remove1_A.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606685E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606685E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606686E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606686E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606687E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606688E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606688E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606689E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.57266060669E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606691E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606691E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606764E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606765E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606765E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606766E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606766E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606767E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606767E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606768E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606768E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606769E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606769E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.57266060677E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.57266060677E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606771E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606771E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606772E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606773E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606773E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606774E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606775E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606776E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606777E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606778E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_30_AB_remove1_A" name="@BeforeMethod initialize" time="-1.572660606778E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at Test_39_ABC_remove1_AC.initialize(Test_39_ABC_remove1_AC.java:57)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:340)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:294)
at org.testng.internal.TestInvoker.runConfigMethods(TestInvoker.java:683)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:510)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606781E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606782E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606783E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606783E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606784E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606785E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606785E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606786E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606787E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606788E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606788E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606789E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.57266060679E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.57266060679E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606791E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606792E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606792E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606793E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606863E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606864E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606864E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606865E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606865E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606865E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606866E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606867E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606867E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606868E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606868E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606869E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606869E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.57266060687E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.57266060687E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606871E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606871E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606871E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606872E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606872E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606873E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606873E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606874E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606874E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606875E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="@BeforeMethod initialize" time="-1.572660606875E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod initialize -->
  <testcase classname="Test_1_emptyList" name="testAdd" time="0.004">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.add(TestCase.java:204)
at Test_1_emptyList.testAdd(Test_1_emptyList.java:260)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_1_emptyList" name="testAddAfter_invalidElement" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.addAfter(TestCase.java:260)
at Test_1_emptyList.testAddAfter_invalidElement(Test_1_emptyList.java:209)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_1_emptyList" name="testAddToFront" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.addToFront(TestCase.java:239)
at Test_1_emptyList.testAddToFront(Test_1_emptyList.java:189)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_1_emptyList" name="testAddToRear" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.addToRear(TestCase.java:249)
at Test_1_emptyList.testAddToRear(Test_1_emptyList.java:199)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_1_emptyList" name="testAdd_invalidIndex" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.add(TestCase.java:171)
at Test_1_emptyList.testAdd_invalidIndex(Test_1_emptyList.java:229)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_1_emptyList" name="testAdd_invalidIndex" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.add(TestCase.java:171)
at Test_1_emptyList.testAdd_invalidIndex(Test_1_emptyList.java:229)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_1_emptyList" name="testAdd_validIndex" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.add(TestCase.java:171)
at Test_1_emptyList.testAdd_validIndex(Test_1_emptyList.java:219)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_1_emptyList" name="testContains_invalidElement" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.contains(TestCase.java:125)
at Test_1_emptyList.testContains_invalidElement(Test_1_emptyList.java:110)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_1_emptyList" name="testFirst" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.first(TestCase.java:102)
at Test_1_emptyList.testFirst(Test_1_emptyList.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_1_emptyList" name="testGet" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.get(TestCase.java:215)
at Test_1_emptyList.testGet(Test_1_emptyList.java:271)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testGet -->
  <testcase classname="Test_1_emptyList" name="testIndexOf_invalidElement" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.indexOf(TestCase.java:227)
at Test_1_emptyList.testIndexOf_invalidElement(Test_1_emptyList.java:281)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_1_emptyList" name="testIsEmpty" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.isEmpty(TestCase.java:136)
at Test_1_emptyList.testIsEmpty(Test_1_emptyList.java:120)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_1_emptyList" name="testIterator" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.iterator(TestCase.java:270)
at Test_1_emptyList.testIterator(Test_1_emptyList.java:149)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_1_emptyList" name="testLast" time="0.0">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.last(TestCase.java:113)
at Test_1_emptyList.testLast(Test_1_emptyList.java:100)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testLast -->
  <testcase classname="Test_1_emptyList" name="testListIterator" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.lang.UnsupportedOperationException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.UnsupportedOperationException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.listIterator(TestCase.java:311)
at Test_1_emptyList.testListIterator(Test_1_emptyList.java:159)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_1_emptyList" name="testListIterator_invalidIndex" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.lang.UnsupportedOperationException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.UnsupportedOperationException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.listIterator(TestCase.java:321)
at Test_1_emptyList.testListIterator_invalidIndex(Test_1_emptyList.java:179)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_1_emptyList" name="testListIterator_validIndex" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.lang.UnsupportedOperationException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.UnsupportedOperationException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.listIterator(TestCase.java:321)
at Test_1_emptyList.testListIterator_validIndex(Test_1_emptyList.java:169)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_1_emptyList" name="testRemoveFirst" time="0.0">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.removeFirst(TestCase.java:69)
at Test_1_emptyList.testRemoveFirst(Test_1_emptyList.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_1_emptyList" name="testRemoveLast" time="0.0">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.removeLast(TestCase.java:80)
at Test_1_emptyList.testRemoveLast(Test_1_emptyList.java:70)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_1_emptyList" name="testRemove_invalidElement" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.util.NoSuchElementException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.remove(TestCase.java:91)
at Test_1_emptyList.testRemove_invalidElement(Test_1_emptyList.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_1_emptyList" name="testRemove_invalidIndex" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.remove(TestCase.java:182)
at Test_1_emptyList.testRemove_invalidIndex(Test_1_emptyList.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_1_emptyList" name="testSet" time="0.001">
    <failure type="org.testng.TestException" message="
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException">
      <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.IndexOutOfBoundsException but got java.lang.NullPointerException
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:719)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:616)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NullPointerException
at TestCase.set(TestCase.java:194)
at Test_1_emptyList.testSet(Test_1_emptyList.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
... 22 more
]]>
    </failure>
  </testcase> <!-- testSet -->
  <testcase classname="Test_1_emptyList" name="testSize" time="0.0">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.size(TestCase.java:147)
at Test_1_emptyList.testSize(Test_1_emptyList.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testSize -->
  <testcase classname="Test_1_emptyList" name="testToString" time="0.001">
    <failure type="java.lang.NullPointerException">
      <![CDATA[java.lang.NullPointerException
at TestCase.toString(TestCase.java:158)
at Test_1_emptyList.testToString(Test_1_emptyList.java:139)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- testToString -->
  <testcase classname="Test_2_addToFrontA_A" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_2_addToFrontA_A" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_2_addToFrontA_A" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_2_addToFrontA_A" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_2_addToFrontA_A" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_2_addToFrontA_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_2_addToFrontA_A" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_2_addToFrontA_A" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_2_addToFrontA_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_2_addToFrontA_A" name="testIndexOf" time="0.001">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_2_addToFrontA_A" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_2_addToFrontA_A" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_2_addToFrontA_A" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_2_addToFrontA_A" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_2_addToFrontA_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_2_addToFrontA_A" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_2_addToFrontA_A" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_2_addToFrontA_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_2_addToFrontA_A" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_2_addToFrontA_A" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_3_addToRearA_A" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_3_addToRearA_A" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_3_addToRearA_A" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_3_addToRearA_A" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_3_addToRearA_A" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_3_addToRearA_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_3_addToRearA_A" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_3_addToRearA_A" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_3_addToRearA_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_3_addToRearA_A" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_3_addToRearA_A" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_3_addToRearA_A" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_3_addToRearA_A" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_3_addToRearA_A" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_3_addToRearA_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_3_addToRearA_A" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_3_addToRearA_A" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_3_addToRearA_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_3_addToRearA_A" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_3_addToRearA_A" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_4_addA_A" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_4_addA_A" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_4_addA_A" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_4_addA_A" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_4_addA_A" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_4_addA_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_4_addA_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_4_addA_A" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_4_addA_A" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_4_addA_A" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_4_addA_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_4_addA_A" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_4_addA_A" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_4_addA_A" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_4_addA_A" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_4_addA_A" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_4_addA_A" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_4_addA_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_4_addA_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_4_addA_A" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_4_addA_A" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_4_addA_A" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_4_addA_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_4_addA_A" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_4_addA_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_4_addA_A" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_4_addA_A" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_5_add0A_A" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_5_add0A_A" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_5_add0A_A" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_5_add0A_A" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_5_add0A_A" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_5_add0A_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_5_add0A_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_5_add0A_A" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_5_add0A_A" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_5_add0A_A" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_5_add0A_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_5_add0A_A" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_5_add0A_A" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_5_add0A_A" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_5_add0A_A" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_5_add0A_A" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_5_add0A_A" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_5_add0A_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_5_add0A_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_5_add0A_A" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_5_add0A_A" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_5_add0A_A" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_5_add0A_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_5_add0A_A" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_5_add0A_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_5_add0A_A" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_5_add0A_A" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_6_A_addToFrontB_BA" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_7_A_addToRearB_AB" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_8_A_addAfterBA_AB" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_9_A_addB_AB" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_9_A_addB_AB" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_9_A_addB_AB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_9_A_addB_AB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_9_A_addB_AB" name="testAddToFront" time="0.001">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_9_A_addB_AB" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_9_A_addB_AB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_9_A_addB_AB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_9_A_addB_AB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_9_A_addB_AB" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_9_A_addB_AB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_9_A_addB_AB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_9_A_addB_AB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_9_A_addB_AB" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_9_A_addB_AB" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_9_A_addB_AB" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_9_A_addB_AB" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_9_A_addB_AB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_9_A_addB_AB" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_9_A_addB_AB" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_9_A_addB_AB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_9_A_addB_AB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_9_A_addB_AB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_9_A_addB_AB" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_11_A_add1B_AB" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_11_A_add1B_AB" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_11_A_add1B_AB" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_11_A_add1B_AB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_11_A_add1B_AB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_11_A_add1B_AB" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_11_A_add1B_AB" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_11_A_add1B_AB" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_11_A_add1B_AB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_11_A_add1B_AB" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testGet" time="0.0">
    <skipped/>
  </testcase> <!-- testGet -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testSet" time="0.0">
    <skipped/>
  </testcase> <!-- testSet -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_12_A_removeFirst_emptyList" name="testToString" time="0.0">
    <skipped/>
  </testcase> <!-- testToString -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testGet" time="0.0">
    <skipped/>
  </testcase> <!-- testGet -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testSet" time="0.0">
    <skipped/>
  </testcase> <!-- testSet -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_13_A_removeLast_emptyList" name="testToString" time="0.0">
    <skipped/>
  </testcase> <!-- testToString -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testGet" time="0.0">
    <skipped/>
  </testcase> <!-- testGet -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testSet" time="0.0">
    <skipped/>
  </testcase> <!-- testSet -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_14_A_removeA_emptyList" name="testToString" time="0.0">
    <skipped/>
  </testcase> <!-- testToString -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testGet" time="0.0">
    <skipped/>
  </testcase> <!-- testGet -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testSet" time="0.0">
    <skipped/>
  </testcase> <!-- testSet -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_15_A_remove0_emptyList" name="testToString" time="0.0">
    <skipped/>
  </testcase> <!-- testToString -->
  <testcase classname="Test_16_A_set0B_B" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_16_A_set0B_B" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_16_A_set0B_B" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_16_A_set0B_B" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_16_A_set0B_B" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_16_A_set0B_B" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_16_A_set0B_B" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_16_A_set0B_B" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_16_A_set0B_B" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_16_A_set0B_B" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_16_A_set0B_B" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_16_A_set0B_B" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_16_A_set0B_B" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_16_A_set0B_B" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_16_A_set0B_B" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_16_A_set0B_B" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_16_A_set0B_B" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_16_A_set0B_B" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_16_A_set0B_B" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_16_A_set0B_B" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_17_AB_addToFrontC_CAB" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_22_AB_add0C_CAB" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_25_AB_removeFirst_B" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_26_AB_removeLast_A" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_26_AB_removeLast_A" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_26_AB_removeLast_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_26_AB_removeLast_A" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_26_AB_removeLast_A" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_26_AB_removeLast_A" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_26_AB_removeLast_A" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_26_AB_removeLast_A" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_26_AB_removeLast_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_26_AB_removeLast_A" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_26_AB_removeLast_A" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_26_AB_removeLast_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_26_AB_removeLast_A" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_26_AB_removeLast_A" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_27_AB_removeA_B" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_27_AB_removeA_B" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_27_AB_removeA_B" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_27_AB_removeA_B" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_27_AB_removeA_B" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_27_AB_removeA_B" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_27_AB_removeA_B" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_27_AB_removeA_B" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_27_AB_removeA_B" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_27_AB_removeA_B" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_27_AB_removeA_B" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_27_AB_removeA_B" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_27_AB_removeA_B" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_27_AB_removeA_B" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_27_AB_removeA_B" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_27_AB_removeA_B" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_27_AB_removeA_B" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_27_AB_removeA_B" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_27_AB_removeA_B" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_27_AB_removeA_B" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_28_AB_removeB_A" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_28_AB_removeB_A" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_28_AB_removeB_A" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_28_AB_removeB_A" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_28_AB_removeB_A" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_28_AB_removeB_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_28_AB_removeB_A" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_28_AB_removeB_A" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_28_AB_removeB_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_28_AB_removeB_A" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_28_AB_removeB_A" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_28_AB_removeB_A" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_28_AB_removeB_A" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_28_AB_removeB_A" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_28_AB_removeB_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_28_AB_removeB_A" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_28_AB_removeB_A" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_28_AB_removeB_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_28_AB_removeB_A" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_28_AB_removeB_A" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_29_AB_remove0_B" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_29_AB_remove0_B" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_29_AB_remove0_B" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_29_AB_remove0_B" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_29_AB_remove0_B" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_29_AB_remove0_B" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_29_AB_remove0_B" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_29_AB_remove0_B" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_29_AB_remove0_B" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_29_AB_remove0_B" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_29_AB_remove0_B" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_29_AB_remove0_B" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_29_AB_remove0_B" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_29_AB_remove0_B" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_29_AB_remove0_B" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_29_AB_remove0_B" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_29_AB_remove0_B" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_29_AB_remove0_B" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_29_AB_remove0_B" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_29_AB_remove0_B" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_30_AB_remove1_A" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_30_AB_remove1_A" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_30_AB_remove1_A" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_30_AB_remove1_A" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_30_AB_remove1_A" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_30_AB_remove1_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_30_AB_remove1_A" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_30_AB_remove1_A" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_30_AB_remove1_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testIndexOf_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_invalidElement -->
  <testcase classname="Test_30_AB_remove1_A" name="testIndexOf_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf_validElement -->
  <testcase classname="Test_30_AB_remove1_A" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_30_AB_remove1_A" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_30_AB_remove1_A" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_30_AB_remove1_A" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_30_AB_remove1_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_30_AB_remove1_A" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_30_AB_remove1_A" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_30_AB_remove1_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_30_AB_remove1_A" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_30_AB_remove1_A" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAdd" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAddAfter_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_invalidElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAddAfter_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testAddAfter_validElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAddToFront" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToFront -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAddToRear" time="0.0">
    <skipped/>
  </testcase> <!-- testAddToRear -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAdd_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testAdd_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testAdd_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testContains_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_invalidElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testContains_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testContains_validElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testFirst -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testGet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testGet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testGet_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testIndexOf" time="0.0">
    <skipped/>
  </testcase> <!-- testIndexOf -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testIsEmpty" time="0.0">
    <skipped/>
  </testcase> <!-- testIsEmpty -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testIterator -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testLast" time="0.0">
    <skipped/>
  </testcase> <!-- testLast -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testListIterator" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testListIterator_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testListIterator_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testListIterator_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemoveFirst" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveFirst -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemoveLast" time="0.0">
    <skipped/>
  </testcase> <!-- testRemoveLast -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemove_invalidElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemove_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemove_validElement" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validElement -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testRemove_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testRemove_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testSet_invalidIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_invalidIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testSet_validIndex" time="0.0">
    <skipped/>
  </testcase> <!-- testSet_validIndex -->
  <testcase classname="Test_39_ABC_remove1_AC" name="testSize" time="0.0">
    <skipped/>
  </testcase> <!-- testSize -->
</testsuite> <!-- IUArrayList -->
