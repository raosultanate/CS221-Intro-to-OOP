<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="681" passed="681" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-11-15T11:56:57 MST" name="Iterator" finished-at="2019-11-15T11:56:58 MST" duration-ms="1054">
    <groups>
    </groups>
    <test started-at="2019-11-15T11:56:57 MST" name="IUSingleList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1054">
      <class name="ItrTest_27_AB_set1C_AC">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_27_AB_set1C_AC.testItrNextNextRemove_next(ItrTest_27_AB_set1C_AC.java:238)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_27_AB_set1C_AC.testItrNextNextRemove_remove(ItrTest_27_AB_set1C_AC.java:249)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_27_AB_set1C_AC.testItrNextNext_next(ItrTest_27_AB_set1C_AC.java:136)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_27_AB_set1C_AC.testItrNextRemoveNext_next(ItrTest_27_AB_set1C_AC.java:204)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_27_AB_set1C_AC.testItrNextRemove_remove(ItrTest_27_AB_set1C_AC.java:181)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_27_AB_set1C_AC@71c3b41]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_27_AB_set1C_AC.testItr_remove(ItrTest_27_AB_set1C_AC.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_27_AB_set1C_AC -->
      <class name="ItrTest_19_AB_removeB_A">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_19_AB_removeB_A.testItrNextRemove_next(ItrTest_19_AB_removeB_A.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="3" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_19_AB_removeB_A.testItrNextRemove_remove(ItrTest_19_AB_removeB_A.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_19_AB_removeB_A.testItrNext_next(ItrTest_19_AB_removeB_A.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_19_AB_removeB_A.testItr_remove(ItrTest_19_AB_removeB_A.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_19_AB_removeB_A@11c9af63]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_19_AB_removeB_A -->
      <class name="ItrTest_33_ABC_removeLast_AB">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_33_ABC_removeLast_AB.testItrNextNextRemove_next(ItrTest_33_ABC_removeLast_AB.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_33_ABC_removeLast_AB.testItrNextNextRemove_remove(ItrTest_33_ABC_removeLast_AB.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_33_ABC_removeLast_AB.testItrNextNext_next(ItrTest_33_ABC_removeLast_AB.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_33_ABC_removeLast_AB.testItrNextRemoveNext_next(ItrTest_33_ABC_removeLast_AB.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_33_ABC_removeLast_AB.testItrNextRemove_remove(ItrTest_33_ABC_removeLast_AB.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_33_ABC_removeLast_AB@36d585c]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_33_ABC_removeLast_AB.testItr_remove(ItrTest_33_ABC_removeLast_AB.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_33_ABC_removeLast_AB -->
      <class name="ItrTest_38_ABC_remove1_AC">
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_38_ABC_remove1_AC.testItrNextNextRemove_next(ItrTest_38_ABC_remove1_AC.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_38_ABC_remove1_AC.testItrNextNextRemove_remove(ItrTest_38_ABC_remove1_AC.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_38_ABC_remove1_AC.testItrNextNext_next(ItrTest_38_ABC_remove1_AC.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_38_ABC_remove1_AC.testItrNextRemoveNext_next(ItrTest_38_ABC_remove1_AC.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_38_ABC_remove1_AC.testItrNextRemove_remove(ItrTest_38_ABC_remove1_AC.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_38_ABC_remove1_AC@609db43b]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_38_ABC_remove1_AC.testItr_remove(ItrTest_38_ABC_remove1_AC.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_38_ABC_remove1_AC -->
      <class name="ItrTest_23_AB_addAfterCB_ABC">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_23_AB_addAfterCB_ABC.testItrNextNextNextRemove_next(ItrTest_23_AB_addAfterCB_ABC.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_23_AB_addAfterCB_ABC.testItrNextNextNextRemove_remove(ItrTest_23_AB_addAfterCB_ABC.java:318)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_23_AB_addAfterCB_ABC.testItrNextNextNext_next(ItrTest_23_AB_addAfterCB_ABC.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_23_AB_addAfterCB_ABC.testItrNextNextRemoveNext_next(ItrTest_23_AB_addAfterCB_ABC.java:341)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_23_AB_addAfterCB_ABC.testItrNextNextRemove_remove(ItrTest_23_AB_addAfterCB_ABC.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_23_AB_addAfterCB_ABC.testItrNextRemove_remove(ItrTest_23_AB_addAfterCB_ABC.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_23_AB_addAfterCB_ABC@28975c28]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_23_AB_addAfterCB_ABC.testItr_remove(ItrTest_23_AB_addAfterCB_ABC.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_23_AB_addAfterCB_ABC -->
      <class name="ItrTest_18_AB_removeA_B">
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_18_AB_removeA_B.testItrNextRemove_next(ItrTest_18_AB_removeA_B.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_18_AB_removeA_B.testItrNextRemove_remove(ItrTest_18_AB_removeA_B.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_18_AB_removeA_B.testItrNext_next(ItrTest_18_AB_removeA_B.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_18_AB_removeA_B.testItr_remove(ItrTest_18_AB_removeA_B.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_18_AB_removeA_B@45ca843]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_18_AB_removeA_B -->
      <class name="ItrTest_37_ABC_remove0_BC">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_37_ABC_remove0_BC.testItrNextNextRemove_next(ItrTest_37_ABC_remove0_BC.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_37_ABC_remove0_BC.testItrNextNextRemove_remove(ItrTest_37_ABC_remove0_BC.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_37_ABC_remove0_BC.testItrNextNext_next(ItrTest_37_ABC_remove0_BC.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_37_ABC_remove0_BC.testItrNextRemoveNext_next(ItrTest_37_ABC_remove0_BC.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_37_ABC_remove0_BC.testItrNextRemove_remove(ItrTest_37_ABC_remove0_BC.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_37_ABC_remove0_BC@3c947bc5]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_37_ABC_remove0_BC.testItr_remove(ItrTest_37_ABC_remove0_BC.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_37_ABC_remove0_BC -->
      <class name="ItrTest_42_ABC_set2D_ABD">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_42_ABC_set2D_ABD.testItrNextNextNextRemove_next(ItrTest_42_ABC_set2D_ABD.java:308)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_42_ABC_set2D_ABD.testItrNextNextNextRemove_remove(ItrTest_42_ABC_set2D_ABD.java:319)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_42_ABC_set2D_ABD.testItrNextNextNext_next(ItrTest_42_ABC_set2D_ABD.java:274)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_42_ABC_set2D_ABD.testItrNextNextRemoveNext_next(ItrTest_42_ABC_set2D_ABD.java:342)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_42_ABC_set2D_ABD.testItrNextNextRemove_remove(ItrTest_42_ABC_set2D_ABD.java:251)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_42_ABC_set2D_ABD.testItrNextRemove_remove(ItrTest_42_ABC_set2D_ABD.java:183)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_42_ABC_set2D_ABD@6497b078]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_42_ABC_set2D_ABD.testItr_remove(ItrTest_42_ABC_set2D_ABD.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_42_ABC_set2D_ABD -->
      <class name="ItrTest_11_A_addAfterBA_AB">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_11_A_addAfterBA_AB.testItrNextNextRemove_next(ItrTest_11_A_addAfterBA_AB.java:237)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_11_A_addAfterBA_AB.testItrNextNextRemove_remove(ItrTest_11_A_addAfterBA_AB.java:248)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_11_A_addAfterBA_AB.testItrNextNext_next(ItrTest_11_A_addAfterBA_AB.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_11_A_addAfterBA_AB.testItrNextRemoveNext_next(ItrTest_11_A_addAfterBA_AB.java:203)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_11_A_addAfterBA_AB.testItrNextRemove_remove(ItrTest_11_A_addAfterBA_AB.java:180)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_11_A_addAfterBA_AB.testItr_remove(ItrTest_11_A_addAfterBA_AB.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_11_A_addAfterBA_AB@f2ff811]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_11_A_addAfterBA_AB -->
      <class name="ItrTest_36_ABC_removeC_AB">
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_36_ABC_removeC_AB.testItrNextNextRemove_next(ItrTest_36_ABC_removeC_AB.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_36_ABC_removeC_AB.testItrNextNextRemove_remove(ItrTest_36_ABC_removeC_AB.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_36_ABC_removeC_AB.testItrNextNext_next(ItrTest_36_ABC_removeC_AB.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_36_ABC_removeC_AB.testItrNextRemoveNext_next(ItrTest_36_ABC_removeC_AB.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_36_ABC_removeC_AB.testItrNextRemove_remove(ItrTest_36_ABC_removeC_AB.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_36_ABC_removeC_AB.testItr_remove(ItrTest_36_ABC_removeC_AB.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_36_ABC_removeC_AB@5552768b]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_36_ABC_removeC_AB -->
      <class name="ItrTest_39_ABC_remove2_AB">
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_39_ABC_remove2_AB.testItrNextNextRemove_next(ItrTest_39_ABC_remove2_AB.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_39_ABC_remove2_AB.testItrNextNextRemove_remove(ItrTest_39_ABC_remove2_AB.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_39_ABC_remove2_AB.testItrNextNext_next(ItrTest_39_ABC_remove2_AB.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_39_ABC_remove2_AB.testItrNextRemoveNext_next(ItrTest_39_ABC_remove2_AB.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_39_ABC_remove2_AB.testItrNextRemove_remove(ItrTest_39_ABC_remove2_AB.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_39_ABC_remove2_AB@55f616cf]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_39_ABC_remove2_AB.testItr_remove(ItrTest_39_ABC_remove2_AB.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_39_ABC_remove2_AB -->
      <class name="ItrTest_15_A_add1B_AB">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_15_A_add1B_AB.testItrNextNextRemove_next(ItrTest_15_A_add1B_AB.java:237)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_15_A_add1B_AB.testItrNextNextRemove_remove(ItrTest_15_A_add1B_AB.java:248)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_15_A_add1B_AB.testItrNextNext_next(ItrTest_15_A_add1B_AB.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_15_A_add1B_AB.testItrNextRemoveNext_next(ItrTest_15_A_add1B_AB.java:203)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_15_A_add1B_AB.testItrNextRemove_remove(ItrTest_15_A_add1B_AB.java:180)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_15_A_add1B_AB.testItr_remove(ItrTest_15_A_add1B_AB.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_15_A_add1B_AB@5ab9e72c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_15_A_add1B_AB -->
      <class name="ItrTest_26_AB_set0C_CB">
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_26_AB_set0C_CB.testItrNextNextRemove_next(ItrTest_26_AB_set0C_CB.java:237)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_26_AB_set0C_CB.testItrNextNextRemove_remove(ItrTest_26_AB_set0C_CB.java:248)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_26_AB_set0C_CB.testItrNextNext_next(ItrTest_26_AB_set0C_CB.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_26_AB_set0C_CB.testItrNextRemoveNext_next(ItrTest_26_AB_set0C_CB.java:203)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_26_AB_set0C_CB.testItrNextRemove_remove(ItrTest_26_AB_set0C_CB.java:180)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_26_AB_set0C_CB@157853da]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_26_AB_set0C_CB.testItr_remove(ItrTest_26_AB_set0C_CB.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_26_AB_set0C_CB -->
      <class name="ItrTest_22_AB_addAfterCA_ACB">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_22_AB_addAfterCA_ACB.testItrNextNextNextRemove_next(ItrTest_22_AB_addAfterCA_ACB.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_22_AB_addAfterCA_ACB.testItrNextNextNextRemove_remove(ItrTest_22_AB_addAfterCA_ACB.java:318)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_22_AB_addAfterCA_ACB.testItrNextNextNext_next(ItrTest_22_AB_addAfterCA_ACB.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_22_AB_addAfterCA_ACB.testItrNextNextRemoveNext_next(ItrTest_22_AB_addAfterCA_ACB.java:341)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_22_AB_addAfterCA_ACB.testItrNextNextRemove_remove(ItrTest_22_AB_addAfterCA_ACB.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_22_AB_addAfterCA_ACB.testItrNextRemove_remove(ItrTest_22_AB_addAfterCA_ACB.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_22_AB_addAfterCA_ACB.testItr_remove(ItrTest_22_AB_addAfterCA_ACB.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_22_AB_addAfterCA_ACB@ba54932]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_22_AB_addAfterCA_ACB -->
      <class name="ItrTest_5_emptyList_add0A_A">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_5_emptyList_add0A_A.testItrNextRemove_next(ItrTest_5_emptyList_add0A_A.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_5_emptyList_add0A_A.testItrNextRemove_remove(ItrTest_5_emptyList_add0A_A.java:141)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_5_emptyList_add0A_A.testItrNext_next(ItrTest_5_emptyList_add0A_A.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_5_emptyList_add0A_A@41c2284a]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_5_emptyList_add0A_A.testItr_remove(ItrTest_5_emptyList_add0A_A.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_5_emptyList_add0A_A -->
      <class name="ItrTest_17_AB_removeLast_A">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_17_AB_removeLast_A.testItrNextRemove_next(ItrTest_17_AB_removeLast_A.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_17_AB_removeLast_A.testItrNextRemove_remove(ItrTest_17_AB_removeLast_A.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_17_AB_removeLast_A.testItrNext_next(ItrTest_17_AB_removeLast_A.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_17_AB_removeLast_A@1d8bd0de]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_17_AB_removeLast_A.testItr_remove(ItrTest_17_AB_removeLast_A.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_17_AB_removeLast_A -->
      <class name="ItrTest_34_ABC_removeA_BC">
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_34_ABC_removeA_BC.testItrNextNextRemove_next(ItrTest_34_ABC_removeA_BC.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_34_ABC_removeA_BC.testItrNextNextRemove_remove(ItrTest_34_ABC_removeA_BC.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_34_ABC_removeA_BC.testItrNextNext_next(ItrTest_34_ABC_removeA_BC.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_34_ABC_removeA_BC.testItrNextRemoveNext_next(ItrTest_34_ABC_removeA_BC.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_34_ABC_removeA_BC.testItrNextRemove_remove(ItrTest_34_ABC_removeA_BC.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_34_ABC_removeA_BC@87a85e1]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_34_ABC_removeA_BC.testItr_remove(ItrTest_34_ABC_removeA_BC.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_34_ABC_removeA_BC -->
      <class name="ItrTest_16_AB_removeFirst_B">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_16_AB_removeFirst_B.testItrNextRemove_next(ItrTest_16_AB_removeFirst_B.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_16_AB_removeFirst_B.testItrNextRemove_remove(ItrTest_16_AB_removeFirst_B.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_16_AB_removeFirst_B.testItrNext_next(ItrTest_16_AB_removeFirst_B.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_16_AB_removeFirst_B@186f8716]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_16_AB_removeFirst_B.testItr_remove(ItrTest_16_AB_removeFirst_B.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_16_AB_removeFirst_B -->
      <class name="ItrTest_8_A_removeA_emptyList">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_8_A_removeA_emptyList@1fb700ee]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_8_A_removeA_emptyList@1fb700ee]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_8_A_removeA_emptyList@1fb700ee]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_8_A_removeA_emptyList@1fb700ee]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_8_A_removeA_emptyList.testItr_next(ItrTest_8_A_removeA_emptyList.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_8_A_removeA_emptyList@1fb700ee]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_8_A_removeA_emptyList.testItr_remove(ItrTest_8_A_removeA_emptyList.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_8_A_removeA_emptyList@1fb700ee]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_8_A_removeA_emptyList -->
      <class name="ItrTest_35_ABC_removeB_AC">
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_35_ABC_removeB_AC.testItrNextNextRemove_next(ItrTest_35_ABC_removeB_AC.java:239)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_35_ABC_removeB_AC.testItrNextNextRemove_remove(ItrTest_35_ABC_removeB_AC.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_35_ABC_removeB_AC.testItrNextNext_next(ItrTest_35_ABC_removeB_AC.java:137)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_35_ABC_removeB_AC.testItrNextRemoveNext_next(ItrTest_35_ABC_removeB_AC.java:205)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_35_ABC_removeB_AC.testItrNextRemove_remove(ItrTest_35_ABC_removeB_AC.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_35_ABC_removeB_AC@671a5887]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_35_ABC_removeB_AC.testItr_remove(ItrTest_35_ABC_removeB_AC.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_35_ABC_removeB_AC -->
      <class name="ItrTest_7_A_removeLast_emptyList">
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_7_A_removeLast_emptyList@46fa7c39]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_7_A_removeLast_emptyList@46fa7c39]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_7_A_removeLast_emptyList@46fa7c39]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_7_A_removeLast_emptyList@46fa7c39]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_7_A_removeLast_emptyList@46fa7c39]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_7_A_removeLast_emptyList.testItr_next(ItrTest_7_A_removeLast_emptyList.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_7_A_removeLast_emptyList@46fa7c39]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_7_A_removeLast_emptyList.testItr_remove(ItrTest_7_A_removeLast_emptyList.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_7_A_removeLast_emptyList -->
      <class name="ItrTest_1_emptyList">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_1_emptyList@1018bde2]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_1_emptyList@1018bde2]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_1_emptyList@1018bde2]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_1_emptyList@1018bde2]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_1_emptyList.testItr_next(ItrTest_1_emptyList.java:60)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_1_emptyList@1018bde2]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_1_emptyList.testItr_remove(ItrTest_1_emptyList.java:71)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_1_emptyList@1018bde2]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_1_emptyList -->
      <class name="ItrTest_41_ABC_set1D_ADC">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_41_ABC_set1D_ADC.testItrNextNextNextRemove_next(ItrTest_41_ABC_set1D_ADC.java:308)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_41_ABC_set1D_ADC.testItrNextNextNextRemove_remove(ItrTest_41_ABC_set1D_ADC.java:319)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_41_ABC_set1D_ADC.testItrNextNextNext_next(ItrTest_41_ABC_set1D_ADC.java:274)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_41_ABC_set1D_ADC.testItrNextNextRemoveNext_next(ItrTest_41_ABC_set1D_ADC.java:342)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_41_ABC_set1D_ADC.testItrNextNextRemove_remove(ItrTest_41_ABC_set1D_ADC.java:251)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_41_ABC_set1D_ADC.testItrNextRemove_remove(ItrTest_41_ABC_set1D_ADC.java:183)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_41_ABC_set1D_ADC.testItr_remove(ItrTest_41_ABC_set1D_ADC.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_41_ABC_set1D_ADC@1329eff]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
      </class> <!-- ItrTest_41_ABC_set1D_ADC -->
      <class name="ItrTest_40_ABC_set0D_DBC">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_40_ABC_set0D_DBC.testItrNextNextNextRemove_next(ItrTest_40_ABC_set0D_DBC.java:308)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_40_ABC_set0D_DBC.testItrNextNextNextRemove_remove(ItrTest_40_ABC_set0D_DBC.java:319)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_40_ABC_set0D_DBC.testItrNextNextNext_next(ItrTest_40_ABC_set0D_DBC.java:274)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_40_ABC_set0D_DBC.testItrNextNextRemoveNext_next(ItrTest_40_ABC_set0D_DBC.java:342)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_40_ABC_set0D_DBC.testItrNextNextRemove_remove(ItrTest_40_ABC_set0D_DBC.java:251)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_40_ABC_set0D_DBC.testItrNextRemove_remove(ItrTest_40_ABC_set0D_DBC.java:183)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_40_ABC_set0D_DBC.testItr_remove(ItrTest_40_ABC_set0D_DBC.java:81)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_40_ABC_set0D_DBC@c03cf28]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_40_ABC_set0D_DBC -->
      <class name="ItrTest_13_A_set0B_B">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_13_A_set0B_B.testItrNextRemove_next(ItrTest_13_A_set0B_B.java:132)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_13_A_set0B_B.testItrNextRemove_remove(ItrTest_13_A_set0B_B.java:143)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_13_A_set0B_B.testItrNext_next(ItrTest_13_A_set0B_B.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_13_A_set0B_B.testItr_remove(ItrTest_13_A_set0B_B.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_13_A_set0B_B@50caa560]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_13_A_set0B_B -->
      <class name="ItrTest_4_emptyList_addA_A">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_4_emptyList_addA_A.testItrNextRemove_next(ItrTest_4_emptyList_addA_A.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_4_emptyList_addA_A.testItrNextRemove_remove(ItrTest_4_emptyList_addA_A.java:141)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_4_emptyList_addA_A.testItrNext_next(ItrTest_4_emptyList_addA_A.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_4_emptyList_addA_A@1356d4d4]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_4_emptyList_addA_A.testItr_remove(ItrTest_4_emptyList_addA_A.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_4_emptyList_addA_A -->
      <class name="ItrTest_28_AB_addC_ABC">
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_28_AB_addC_ABC.testItrNextNextNextRemove_next(ItrTest_28_AB_addC_ABC.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_28_AB_addC_ABC.testItrNextNextNextRemove_remove(ItrTest_28_AB_addC_ABC.java:318)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_28_AB_addC_ABC.testItrNextNextNext_next(ItrTest_28_AB_addC_ABC.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_28_AB_addC_ABC.testItrNextNextRemoveNext_next(ItrTest_28_AB_addC_ABC.java:341)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_28_AB_addC_ABC.testItrNextNextRemove_remove(ItrTest_28_AB_addC_ABC.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_28_AB_addC_ABC.testItrNextRemove_remove(ItrTest_28_AB_addC_ABC.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_28_AB_addC_ABC@236e3f4e]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_28_AB_addC_ABC.testItr_remove(ItrTest_28_AB_addC_ABC.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_28_AB_addC_ABC -->
      <class name="ItrTest_30_AB_add1C_ACB">
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_30_AB_add1C_ACB.testItrNextNextNextRemove_next(ItrTest_30_AB_add1C_ACB.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_30_AB_add1C_ACB.testItrNextNextNextRemove_remove(ItrTest_30_AB_add1C_ACB.java:318)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_30_AB_add1C_ACB.testItrNextNextNext_next(ItrTest_30_AB_add1C_ACB.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_30_AB_add1C_ACB.testItrNextNextRemoveNext_next(ItrTest_30_AB_add1C_ACB.java:341)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_30_AB_add1C_ACB.testItrNextNextRemove_remove(ItrTest_30_AB_add1C_ACB.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_30_AB_add1C_ACB.testItrNextRemove_remove(ItrTest_30_AB_add1C_ACB.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_30_AB_add1C_ACB@dd0c991]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="3" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_30_AB_add1C_ACB.testItr_remove(ItrTest_30_AB_add1C_ACB.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_30_AB_add1C_ACB -->
      <class name="ItrTest_10_A_addToRearB_AB">
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_10_A_addToRearB_AB.testItrNextNextRemove_next(ItrTest_10_A_addToRearB_AB.java:237)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_10_A_addToRearB_AB.testItrNextNextRemove_remove(ItrTest_10_A_addToRearB_AB.java:248)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_10_A_addToRearB_AB.testItrNextNext_next(ItrTest_10_A_addToRearB_AB.java:135)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_10_A_addToRearB_AB.testItrNextRemoveNext_next(ItrTest_10_A_addToRearB_AB.java:203)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_10_A_addToRearB_AB.testItrNextRemove_remove(ItrTest_10_A_addToRearB_AB.java:180)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_10_A_addToRearB_AB@65b3f4a4]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_10_A_addToRearB_AB.testItr_remove(ItrTest_10_A_addToRearB_AB.java:78)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_10_A_addToRearB_AB -->
      <class name="ItrTest_14_A_add0B_BA">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_14_A_add0B_BA.testItrNextNextRemove_next(ItrTest_14_A_add0B_BA.java:236)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_14_A_add0B_BA.testItrNextNextRemove_remove(ItrTest_14_A_add0B_BA.java:247)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_14_A_add0B_BA.testItrNextNext_next(ItrTest_14_A_add0B_BA.java:134)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_14_A_add0B_BA.testItrNextRemoveNext_next(ItrTest_14_A_add0B_BA.java:202)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_14_A_add0B_BA.testItrNextRemove_remove(ItrTest_14_A_add0B_BA.java:179)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_14_A_add0B_BA.testItr_remove(ItrTest_14_A_add0B_BA.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_14_A_add0B_BA@2a266d09]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_14_A_add0B_BA -->
      <class name="ItrTest_9_A_addToFrontB_BA">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_9_A_addToFrontB_BA.testItrNextNextRemove_next(ItrTest_9_A_addToFrontB_BA.java:236)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_9_A_addToFrontB_BA.testItrNextNextRemove_remove(ItrTest_9_A_addToFrontB_BA.java:247)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_9_A_addToFrontB_BA.testItrNextNext_next(ItrTest_9_A_addToFrontB_BA.java:134)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_9_A_addToFrontB_BA.testItrNextRemoveNext_next(ItrTest_9_A_addToFrontB_BA.java:202)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_9_A_addToFrontB_BA.testItrNextRemove_remove(ItrTest_9_A_addToFrontB_BA.java:179)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_9_A_addToFrontB_BA@4f67eb2a]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_9_A_addToFrontB_BA.testItr_remove(ItrTest_9_A_addToFrontB_BA.java:77)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_9_A_addToFrontB_BA -->
      <class name="ItrTest_25_AB_remove1_A">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_25_AB_remove1_A.testItrNextRemove_next(ItrTest_25_AB_remove1_A.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_25_AB_remove1_A.testItrNextRemove_remove(ItrTest_25_AB_remove1_A.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_25_AB_remove1_A.testItrNext_next(ItrTest_25_AB_remove1_A.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_25_AB_remove1_A.testItr_remove(ItrTest_25_AB_remove1_A.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_25_AB_remove1_A@343570b7]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_25_AB_remove1_A -->
      <class name="ItrTest_21_AB_addToRearC_ABC">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_21_AB_addToRearC_ABC.testItrNextNextNextRemove_next(ItrTest_21_AB_addToRearC_ABC.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_21_AB_addToRearC_ABC.testItrNextNextNextRemove_remove(ItrTest_21_AB_addToRearC_ABC.java:318)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_21_AB_addToRearC_ABC.testItrNextNextNext_next(ItrTest_21_AB_addToRearC_ABC.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_21_AB_addToRearC_ABC.testItrNextNextRemoveNext_next(ItrTest_21_AB_addToRearC_ABC.java:341)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_21_AB_addToRearC_ABC.testItrNextNextRemove_remove(ItrTest_21_AB_addToRearC_ABC.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_21_AB_addToRearC_ABC.testItrNextRemove_remove(ItrTest_21_AB_addToRearC_ABC.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_21_AB_addToRearC_ABC.testItr_remove(ItrTest_21_AB_addToRearC_ABC.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_21_AB_addToRearC_ABC@574b560f]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_21_AB_addToRearC_ABC -->
      <class name="ItrTest_29_AB_add0C_CAB">
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_29_AB_add0C_CAB.testItrNextNextNextRemove_next(ItrTest_29_AB_add0C_CAB.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_29_AB_add0C_CAB.testItrNextNextNextRemove_remove(ItrTest_29_AB_add0C_CAB.java:318)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_29_AB_add0C_CAB.testItrNextNextNext_next(ItrTest_29_AB_add0C_CAB.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_29_AB_add0C_CAB.testItrNextNextRemoveNext_next(ItrTest_29_AB_add0C_CAB.java:341)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_29_AB_add0C_CAB.testItrNextNextRemove_remove(ItrTest_29_AB_add0C_CAB.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_29_AB_add0C_CAB.testItrNextRemove_remove(ItrTest_29_AB_add0C_CAB.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_29_AB_add0C_CAB@3cc1435c]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_29_AB_add0C_CAB.testItr_remove(ItrTest_29_AB_add0C_CAB.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_29_AB_add0C_CAB -->
      <class name="ItrTest_12_A_remove0_emptyList">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_12_A_remove0_emptyList@568ff82]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_12_A_remove0_emptyList@568ff82]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_12_A_remove0_emptyList@568ff82]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_12_A_remove0_emptyList.testItr_next(ItrTest_12_A_remove0_emptyList.java:65)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_12_A_remove0_emptyList@568ff82]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_12_A_remove0_emptyList@568ff82]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_12_A_remove0_emptyList@568ff82]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_12_A_remove0_emptyList.testItr_remove(ItrTest_12_A_remove0_emptyList.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_12_A_remove0_emptyList -->
      <class name="ItrTest_3_emptyList_addToRearA_A">
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_3_emptyList_addToRearA_A.testItrNextRemove_next(ItrTest_3_emptyList_addToRearA_A.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_3_emptyList_addToRearA_A.testItrNextRemove_remove(ItrTest_3_emptyList_addToRearA_A.java:141)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_3_emptyList_addToRearA_A.testItrNext_next(ItrTest_3_emptyList_addToRearA_A.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_3_emptyList_addToRearA_A@6bf0219d]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_3_emptyList_addToRearA_A.testItr_remove(ItrTest_3_emptyList_addToRearA_A.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_3_emptyList_addToRearA_A -->
      <class name="ItrTest_2_emptyList_addToFrontA_A">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_2_emptyList_addToFrontA_A.testItrNextRemove_next(ItrTest_2_emptyList_addToFrontA_A.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_2_emptyList_addToFrontA_A.testItrNextRemove_remove(ItrTest_2_emptyList_addToFrontA_A.java:141)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_2_emptyList_addToFrontA_A.testItrNext_next(ItrTest_2_emptyList_addToFrontA_A.java:96)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_2_emptyList_addToFrontA_A@757acd7b]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="2" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_2_emptyList_addToFrontA_A.testItr_remove(ItrTest_2_emptyList_addToFrontA_A.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_2_emptyList_addToFrontA_A -->
      <class name="ItrTest_20_AB_addToFrontC_CAB">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_20_AB_addToFrontC_CAB.testItrNextNextNextRemove_next(ItrTest_20_AB_addToFrontC_CAB.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_20_AB_addToFrontC_CAB.testItrNextNextNextRemove_remove(ItrTest_20_AB_addToFrontC_CAB.java:318)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_20_AB_addToFrontC_CAB.testItrNextNextNext_next(ItrTest_20_AB_addToFrontC_CAB.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_20_AB_addToFrontC_CAB.testItrNextNextRemoveNext_next(ItrTest_20_AB_addToFrontC_CAB.java:341)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_20_AB_addToFrontC_CAB.testItrNextNextRemove_remove(ItrTest_20_AB_addToFrontC_CAB.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_20_AB_addToFrontC_CAB.testItrNextRemove_remove(ItrTest_20_AB_addToFrontC_CAB.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_20_AB_addToFrontC_CAB@36b4fe2a]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_20_AB_addToFrontC_CAB.testItr_remove(ItrTest_20_AB_addToFrontC_CAB.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_20_AB_addToFrontC_CAB -->
      <class name="ItrTest_32_ABC_removeFirst_BC">
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_32_ABC_removeFirst_BC.testItrNextNextRemove_next(ItrTest_32_ABC_removeFirst_BC.java:238)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_32_ABC_removeFirst_BC.testItrNextNextRemove_remove(ItrTest_32_ABC_removeFirst_BC.java:249)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_32_ABC_removeFirst_BC.testItrNextNext_next(ItrTest_32_ABC_removeFirst_BC.java:136)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_32_ABC_removeFirst_BC.testItrNextRemoveNext_next(ItrTest_32_ABC_removeFirst_BC.java:204)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_32_ABC_removeFirst_BC.testItrNextRemove_remove(ItrTest_32_ABC_removeFirst_BC.java:181)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_32_ABC_removeFirst_BC.testItr_remove(ItrTest_32_ABC_removeFirst_BC.java:79)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_32_ABC_removeFirst_BC@69fb6037]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_32_ABC_removeFirst_BC -->
      <class name="ItrTest_6_A_removeFirst_emptyList">
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_6_A_removeFirst_emptyList@53aad5d5]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_6_A_removeFirst_emptyList@53aad5d5]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_6_A_removeFirst_emptyList.testItr_next(ItrTest_6_A_removeFirst_emptyList.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_6_A_removeFirst_emptyList@53aad5d5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_6_A_removeFirst_emptyList@53aad5d5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_6_A_removeFirst_emptyList@53aad5d5]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_6_A_removeFirst_emptyList.testItr_remove(ItrTest_6_A_removeFirst_emptyList.java:75)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_6_A_removeFirst_emptyList@53aad5d5]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_6_A_removeFirst_emptyList -->
      <class name="ItrTest_31_AB_add2C_ABC">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_hasNext -->
        <test-method signature="testItrNextNextNextRemove_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_31_AB_add2C_ABC.testItrNextNextNextRemove_next(ItrTest_31_AB_add2C_ABC.java:307)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNextRemove_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_31_AB_add2C_ABC.testItrNextNextNextRemove_remove(ItrTest_31_AB_add2C_ABC.java:318)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_31_AB_add2C_ABC.testItrNextNextNext_next(ItrTest_31_AB_add2C_ABC.java:273)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextNext_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_hasNext -->
        <test-method signature="testItrNextNextRemoveNext_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_31_AB_add2C_ABC.testItrNextNextRemoveNext_next(ItrTest_31_AB_add2C_ABC.java:341)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemoveNext_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNextRemove_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_next -->
        <test-method signature="testItrNextNextRemove_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_31_AB_add2C_ABC.testItrNextNextRemove_remove(ItrTest_31_AB_add2C_ABC.java:250)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextNext_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_next -->
        <test-method signature="testItrNextNext_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_hasNext -->
        <test-method signature="testItrNextRemoveNext_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemoveNext_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemoveNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemoveNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_31_AB_add2C_ABC.testItrNextRemove_remove(ItrTest_31_AB_add2C_ABC.java:182)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItr_next" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="testItr_remove" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_31_AB_add2C_ABC.testItr_remove(ItrTest_31_AB_add2C_ABC.java:80)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_31_AB_add2C_ABC@5f16132a]" started-at="2019-11-15T11:56:58 MST" name="initList" finished-at="2019-11-15T11:56:58 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
      </class> <!-- ItrTest_31_AB_add2C_ABC -->
      <class name="ItrTest_24_AB_remove0_B">
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_hasNext()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_next()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_24_AB_remove0_B.testItrNextRemove_next(ItrTest_24_AB_remove0_B.java:133)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNextRemove_remove()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItrNextRemove_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_24_AB_remove0_B.testItrNextRemove_remove(ItrTest_24_AB_remove0_B.java:144)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNextRemove_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_hasNext()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItrNext_next()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException
at IUSingleLinkedList$SLLIterator.next(IUSingleLinkedList.java:394)
at TestCase.next(TestCase.java:291)
at ItrTest_24_AB_remove0_B.testItrNext_next(ItrTest_24_AB_remove0_B.java:99)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_next -->
        <test-method signature="testItrNext_remove()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItrNext_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItrNext_remove -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_hasNext()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItr_hasNext" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_hasNext -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_next()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItr_next" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_next -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method is-config="true" signature="initList(java.lang.String)[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="initList" finished-at="2019-11-15T11:56:57 MST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[singleLinkedList]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initList -->
        <test-method signature="testItr_remove()[pri:0, instance:ItrTest_24_AB_remove0_B@3943a2be]" started-at="2019-11-15T11:56:57 MST" name="testItr_remove" finished-at="2019-11-15T11:56:57 MST" duration-ms="0" status="PASS">
          <exception class="java.lang.IllegalStateException">
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException
at IUSingleLinkedList$SLLIterator.remove(IUSingleLinkedList.java:410)
at TestCase.remove(TestCase.java:301)
at ItrTest_24_AB_remove0_B.testItr_remove(ItrTest_24_AB_remove0_B.java:76)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testItr_remove -->
      </class> <!-- ItrTest_24_AB_remove0_B -->
    </test> <!-- IUSingleList -->
  </suite> <!-- Iterator -->
</testng-results>
