<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="111" passed="111" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-09-13T15:05:09 MDT" name="Simple Set" finished-at="2019-09-13T15:05:09 MDT" duration-ms="303">
    <groups>
    </groups>
    <test started-at="2019-09-13T15:05:09 MDT" name="ArraySet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="303">
      <class name="TestSimpleSet_3">
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_3.testRemove_invalidElement(TestSimpleSet_3.java:127)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_3@68267da0]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- TestSimpleSet_3 -->
      <class name="TestSimpleSet_4">
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_A()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_A -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method signature="testContains_A()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testContains_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_A -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_A()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_A -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_4.testRemove_invalidElement(TestSimpleSet_4.java:123)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_4@2638011]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- TestSimpleSet_4 -->
      <class name="TestSimpleSet_1">
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_1.testRemove_invalidElement(TestSimpleSet_1.java:90)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_1@2898ac89]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
      </class> <!-- TestSimpleSet_1 -->
      <class name="TestSimpleSet_2">
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_2.testRemove_invalidElement(TestSimpleSet_2.java:95)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_2@683dbc2c]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- TestSimpleSet_2 -->
      <class name="TestSimpleSet_7">
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_A()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_A -->
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_A()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testContains_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_A -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_A()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_A -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_7.testRemove_invalidElement(TestSimpleSet_7.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_7@313b2ea6]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
      </class> <!-- TestSimpleSet_7 -->
      <class name="TestSimpleSet_11">
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_11.testRemove_invalidElement(TestSimpleSet_11.java:131)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_11@a1cdc6d]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
      </class> <!-- TestSimpleSet_11 -->
      <class name="TestSimpleSet_10">
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="3" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_10.testRemove_invalidElement(TestSimpleSet_10.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_10@623a8092]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
      </class> <!-- TestSimpleSet_10 -->
      <class name="TestSimpleSet_8">
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_8.testRemove_invalidElement(TestSimpleSet_8.java:128)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[A]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_8@2f465398]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
      </class> <!-- TestSimpleSet_8 -->
      <class name="TestSimpleSet_5">
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_A()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_A -->
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_A()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testContains_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_A -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testRemove_A()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_A" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_A -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_5.testRemove_invalidElement(TestSimpleSet_5.java:124)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_5@6ff29830]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- TestSimpleSet_5 -->
      <class name="TestSimpleSet_6">
        <test-method signature="testAdd_B()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_B" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_B -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method signature="testContains_B()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testContains_B" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_B -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_B()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_B" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_B -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_6.testRemove_invalidElement(TestSimpleSet_6.java:126)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_6@6a2b953e]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
      </class> <!-- TestSimpleSet_6 -->
      <class name="TestSimpleSet_9">
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_element()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_element" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_element -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testAdd_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testAdd_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_invalidElement()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testContains_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method signature="testContains_validElement(java.lang.Character)[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testContains_validElement" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains_validElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testIsEmpty()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testIsEmpty" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testRemove_invalidElement()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_invalidElement" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <exception class="java.util.NoSuchElementException">
            <message>
              <![CDATA[ArraySet]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.util.NoSuchElementException: ArraySet
at ArraySet.remove(ArraySet.java:82)
at SetTestCase.remove(SetTestCase.java:37)
at TestSimpleSet_9.testRemove_invalidElement(TestSimpleSet_9.java:130)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1378)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.util.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_invalidElement -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[B]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testRemove_validElements(java.lang.Character)[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testRemove_validElements" data-provider="validElements" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[C]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove_validElements -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testSize()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testSize" finished-at="2019-09-13T15:05:09 MDT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method is-config="true" signature="initializeSet()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="initializeSet" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initializeSet -->
        <test-method signature="testToString()[pri:0, instance:TestSimpleSet_9@548e6d58]" started-at="2019-09-13T15:05:09 MDT" name="testToString" finished-at="2019-09-13T15:05:09 MDT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testToString -->
      </class> <!-- TestSimpleSet_9 -->
    </test> <!-- ArraySet -->
  </suite> <!-- Simple Set -->
</testng-results>
